%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2372 712
%%HiResBoundingBox: 0 0 2371.9199 711.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2371.9199 711.12 re
W
q
[0.24 0 0 -0.24 0 711.12] cm
q
0 0 9883.333 2959.9988 re
W*
q
[26.31801 0 0 26.317486 103.379929 270.14847] cm
/DeviceRGB {} CS
[0.8706 0.4627 0.1098] SC
/DeviceRGB {} cs
[0.8706 0.4627 0.1098] sc
61.796001 31.233 m
62.036003 30.07 58.710003 27.024 55.284 26.32 c
51.859001 25.615 48.889 25.987999 48.650002 27.15 c
48.411003 28.312 50.994003 29.826 54.419003 30.529999 c
57.846001 31.235001 61.558998 32.396 61.796001 31.233 c
h
69.664001 46.394001 m
68.728004 47.32 70.181999 50.302002 72.903999 53.054001 c
75.628998 55.808002 77.871002 58.685001 78.804001 57.761002 c
79.740997 56.837002 79.013 52.458 76.285004 49.706001 c
73.564003 46.952 70.598 45.467999 69.664001 46.394001 c
h
58.688 38.791 m
55.711998 36.310001 52.620998 35.117001 51.776001 36.125999 c
50.936001 37.135998 52.665001 39.966 55.637001 42.445999 c
58.612 44.925999 62.979 45 63.824001 43.990997 c
64.664001 42.98 61.660999 41.271 58.688 38.791 c
h
38.457001 30.02 m
34.591999 29.765001 31.388 30.622 31.302 31.934 c
31.216 33.245998 34.278 34.516998 38.143002 34.771999 c
42.008003 35.028 45.211002 34.169998 45.298 32.859001 c
45.384998 31.546 42.321999 30.275 38.457001 30.02 c
h
95.510002 83.817001 m
93.993004 83.878998 l
95.508003 83.784996 l
95.362 81.450996 95.305 78.632996 94.282005 74.667999 c
93.261002 70.698997 91.294006 65.580002 87.381004 58.387001 c
87.372002 58.371002 87.361008 58.356003 87.354004 58.338001 c
81.629005 46.096001 71.708008 28.881001 57.131004 18.59 c
57.241005 17.853001 57.317005 17.028 57.317005 16.146999 c
57.315006 14.785999 57.151005 13.311999 56.633003 11.915999 c
56.122002 10.530999 55.198002 9.178 53.704002 8.369999 c
53.566002 8.295999 53.422001 8.243998 53.267002 8.212999 c
53.189003 8.197999 52.340004 8.040999 50.936001 8.040999 c
49.009998 8.04 46.019001 8.34 42.542999 9.725 c
42.304001 9.715 41.959999 9.704001 41.533001 9.704001 c
39.214001 9.730001 34.455002 9.940001 30.788002 12.479 c
29.292002 12.642 24.427002 13.32 20.456001 16.188 c
20.293001 16.177 20.105001 16.171 19.892002 16.171 c
18.009003 16.168999 14.162003 16.67 8.192002 19.656 c
8.046002 19.73 7.921002 19.827 7.810002 19.937 c
7.386003 20.177999 6.999003 20.511 6.700002 20.934 c
6.027002 21.864 5.710002 23.087 5.708002 24.608 c
5.713002 26.744999 6.333002 29.539 7.891002 33.327 c
8.053002 33.717999 8.366002 34.02 8.762002 34.168999 c
8.769002 34.170998 11.607002 35.237 16.444002 37.219997 c
27.036003 41.563995 47.132004 50.289997 67.334 61.615997 c
67.346001 61.746998 67.362999 61.875996 67.362999 62.010998 c
67.364998 65.511002 67.714996 68.334999 68.232002 70.374001 c
68.497002 71.399002 68.793999 72.223999 69.173004 72.901001 c
69.368004 73.238998 69.582001 73.547005 69.900002 73.834999 c
70.207001 74.112 70.682999 74.408997 71.326004 74.415001 c
72.086006 74.417 72.680008 73.952003 72.969002 73.557999 c
73.421005 72.945999 73.602005 72.310997 73.770004 71.504997 c
73.924004 70.697998 74.018005 69.723999 74.046005 68.528 c
74.072006 67.235001 74.354004 66.310997 74.639008 65.831001 c
75.196007 66.163002 75.754005 66.488998 76.311005 66.825005 c
77.028008 68.313004 77.721008 71.030006 77.692001 75.073006 c
77.692001 75.376007 l
77.692001 75.376007 77.692001 75.419006 77.692001 75.483009 c
77.694 77.32901 77.994003 79.036011 78.477005 80.391006 c
78.727005 81.071007 79.010002 81.66201 79.415009 82.186005 c
79.808006 82.670006 80.394005 83.248001 81.403008 83.278008 c
82.237007 83.282005 82.907005 82.768005 83.257004 82.278008 c
83.815002 81.518005 84.090004 80.62001 84.338005 79.358009 c
84.572006 78.097008 84.727005 76.483009 84.777008 74.401009 c
84.791008 73.833008 84.84301 73.344009 84.917007 72.963005 c
85.141006 73.422005 85.391006 74.067001 85.602005 74.897003 c
86.051003 76.567001 86.434006 78.967003 86.606003 82.138 c
86.789001 85.424004 87.264 87.808998 87.967003 89.515999 c
88.324005 90.369995 88.738007 91.065002 89.286003 91.617996 c
89.816002 92.156998 90.572006 92.572998 91.414001 92.572998 c
91.424004 92.572998 l
92.227005 92.572998 92.936005 92.199997 93.434006 91.728996 c
94.893005 90.275993 95.492004 87.923996 95.533005 84.753998 c
95.528999 84.454002 95.523003 84.139 95.510002 83.817001 c
h
10.456 31.565001 m
9.177 28.335001 8.742001 26.047001 8.747001 24.608 c
8.745001 23.51 8.993001 22.940001 9.155001 22.725 c
9.327001 22.516001 9.358001 22.548 9.440001 22.534 c
9.483001 22.533001 9.677001 22.552999 10.01 22.809 c
11.039001 23.542 12.8 26.468 13.591 32.528 c
13.592 32.541 13.596999 32.551998 13.599 32.564999 c
13.602 32.586998 13.603 32.609997 13.608 32.632 c
13.618 32.681 13.634 32.73 13.649 32.778 c
13.652 32.786999 13.652 32.799 13.656 32.807999 c
13.658 32.812 13.658 32.815998 13.659 32.819 c
12.173 32.229 11.085 31.808001 10.456 31.565001 c
h
16.280001 29.759001 m
15.654 25.891001 14.687 23.468 13.557001 21.880001 c
13.303001 21.515001 13.033001 21.198002 12.757001 20.925001 c
16.488001 19.43 18.828001 19.210001 19.895 19.209002 c
20.174 19.209002 20.367001 19.224001 20.477001 19.236002 c
20.530001 19.242002 20.564001 19.247002 20.579 19.249002 c
21.023001 19.342003 21.485001 19.232002 21.84 18.949003 c
23.695999 17.455004 26.127001 16.548004 28.086 16.053003 c
29.065001 15.804004 29.923 15.656003 30.528 15.569003 c
30.830999 15.526003 31.07 15.498003 31.230999 15.481003 c
31.389999 15.465003 31.455 15.461002 31.455 15.460003 c
31.75 15.439003 32.040001 15.330003 32.276001 15.150003 c
34.860001 13.113003 39.417999 12.712003 41.537003 12.739002 c
41.906002 12.739002 42.200001 12.748002 42.399002 12.757002 c
42.598003 12.766002 42.683002 12.775002 42.683002 12.774002 c
42.922001 12.793002 43.163002 12.754002 43.386002 12.663002 c
46.566002 11.344002 49.274002 11.078002 50.941002 11.078002 c
51.529003 11.078002 51.988003 11.111002 52.288002 11.141002 c
52.353001 11.149002 52.412003 11.156002 52.462002 11.162002 c
53.051003 11.550001 53.475002 12.146002 53.790001 12.976002 c
54.134003 13.889002 54.283001 15.042002 54.281002 16.146002 c
54.282001 16.819002 54.224003 17.465002 54.144001 18.035002 c
51.732002 18.505001 45.661003 19.740002 38.793999 21.541002 c
30.91 23.627001 22.061001 26.378 16.280001 29.759001 c
h
18.285999 34.695999 m
18.349998 34.714001 18.414 34.731998 18.479 34.75 c
19.176001 34.946999 19.878 35.153 20.59 35.375 c
20.658001 35.396 20.726 35.418999 20.795 35.441002 c
21.479 35.656002 22.17 35.881001 22.865 36.120003 c
22.976999 36.158001 23.09 36.195004 23.201 36.234001 c
23.926001 36.483002 24.657 36.745003 25.393 37.014 c
25.531 37.064999 25.668999 37.118 25.808001 37.167999 c
26.564001 37.450001 27.325001 37.738998 28.092001 38.042999 c
28.098001 38.044998 28.104 38.048 28.110001 38.049999 c
28.875 38.353001 29.647001 38.668999 30.421001 38.992001 c
30.555002 39.047001 30.687002 39.102001 30.821001 39.159 c
31.577002 39.477001 32.337002 39.803001 33.098999 40.138 c
33.230999 40.196999 33.362999 40.255001 33.493999 40.313 c
34.250999 40.648998 35.010998 40.988998 35.771 41.338001 c
35.806999 41.355 35.842999 41.371002 35.879002 41.387001 c
36.66 41.745003 37.442001 42.116001 38.225002 42.490002 c
38.381001 42.565002 38.537003 42.637001 38.692001 42.714001 c
39.454002 43.080002 40.218002 43.452 40.982002 43.829002 c
41.111004 43.892002 41.241001 43.958004 41.371002 44.023003 c
42.079002 44.376003 42.788002 44.732002 43.496002 45.092003 c
43.608002 45.151001 43.721001 45.206001 43.834003 45.264004 c
44.587002 45.650005 45.339005 46.040005 46.090004 46.434006 c
46.275005 46.532005 46.460003 46.628006 46.645004 46.726006 c
47.384003 47.117004 48.122005 47.510006 48.858006 47.908005 c
48.997005 47.984005 49.136005 48.059006 49.275005 48.135006 c
49.921005 48.488007 50.563004 48.836006 51.203007 49.193005 c
51.384007 49.293003 51.564007 49.391006 51.745007 49.491005 c
52.445007 49.880005 53.142006 50.268005 53.836006 50.662006 c
54.059006 50.787006 54.275005 50.912006 54.496006 51.035007 c
55.150005 51.408009 55.807007 51.781006 56.454006 52.156006 c
56.639008 52.260006 56.820007 52.369007 57.005005 52.473007 c
57.579006 52.807007 58.151005 53.141006 58.718006 53.473007 c
58.850006 53.550007 58.983006 53.628006 59.114006 53.704006 c
42.667 45.077 27.348 38.426998 18.285999 34.695999 c
h
91.833 88.755997 m
91.683998 89.099998 91.523003 89.334 91.415001 89.452995 c
91.362999 89.399994 91.295998 89.319992 91.221001 89.208992 c
90.617004 88.386993 89.834999 85.987991 89.637001 81.97699 c
89.413002 77.914993 88.875 74.966988 88.170998 72.915993 c
87.814995 71.890991 87.423996 71.083992 86.93 70.438995 c
86.445999 69.821999 85.767998 69.213997 84.723 69.192993 c
84.701996 69.192993 l
84.079994 69.192993 83.499992 69.485992 83.131996 69.840996 c
82.998993 69.967995 82.884995 70.104996 82.782997 70.242996 c
82.681 70.373993 82.597 70.514 82.518997 70.656998 c
82.516998 70.658997 82.514999 70.658997 82.514999 70.662994 c
82.326996 71.006996 82.191002 71.371994 82.076996 71.766991 c
81.875999 72.498993 81.766998 73.344994 81.741997 74.32399 c
81.686996 76.557991 81.5 78.169991 81.270996 79.191986 c
81.229996 79.066986 81.190994 78.939987 81.156998 78.801987 c
80.899994 77.89399 80.725998 76.709984 80.725998 75.480988 c
80.725998 75.471985 80.725998 75.443985 80.727997 75.39399 c
80.727997 75.071991 l
80.725998 72.788994 80.539993 70.852989 80.219994 69.217987 c
80.217995 69.215988 80.217995 69.213989 80.217995 69.21199 c
80.155998 68.899994 80.089996 68.594994 80.020996 68.303993 c
80.016998 68.291992 80.014999 68.283997 80.012993 68.275993 c
79.944992 67.997993 79.869995 67.723991 79.792992 67.463997 c
79.771988 67.402 79.75399 67.342995 79.732994 67.279999 c
79.669991 67.072998 79.603996 66.865997 79.535995 66.672997 c
79.439995 66.408997 79.342995 66.156998 79.236992 65.917 c
78.773994 64.863998 78.222992 64.020996 77.542992 63.388 c
76.868988 62.761002 76.008995 62.333 75.066994 62.333 c
74.898994 62.333 74.734993 62.347 74.576996 62.372002 c
74.510994 62.382 74.445999 62.405003 74.380997 62.419003 c
74.291 62.440002 74.198997 62.458004 74.109993 62.485004 c
73.991997 62.524006 73.876991 62.575005 73.761993 62.628006 c
73.732994 62.642006 73.699997 62.651005 73.671997 62.665005 c
73.537994 62.731007 73.408997 62.811005 73.283997 62.892006 c
73.278999 62.899006 73.270996 62.901005 73.266998 62.905006 c
72.875999 63.170006 72.540001 63.509007 72.268997 63.890007 c
72.268997 63.890007 72.266998 63.890007 72.266998 63.893005 c
72.196999 63.992004 72.131996 64.095009 72.071999 64.198006 c
72.054001 64.229004 72.033997 64.258003 72.014999 64.287003 c
72.014999 64.289001 72.013 64.291 72.013 64.291 c
71.374001 65.390999 71.044998 66.779999 71.000999 68.455002 c
70.998001 68.590004 70.993996 68.723 70.988998 68.848 c
70.983002 68.826996 70.978996 68.806999 70.974998 68.786003 c
70.689995 67.388 70.476997 65.554001 70.413002 63.368004 c
70.408005 63.179005 70.403999 62.987003 70.398003 62.794003 c
70.394005 62.536003 70.389999 62.280003 70.389999 62.015003 c
70.391998 58.618004 68.328003 56.102005 65.811996 54.200005 c
65.681 54.110004 l
65.458 53.974003 65.236 53.839005 65.011002 53.705006 c
65.001999 53.700005 64.993004 53.694004 64.987999 53.688007 c
63.549999 52.817009 62.077 51.935009 60.582001 51.053009 c
60.553001 51.034008 60.52 51.01701 60.486 50.998009 c
60.457001 50.979008 60.424999 50.962009 60.394001 50.944008 c
59.552002 50.448009 58.702 49.952007 57.841 49.458008 c
57.826 49.448009 57.812 49.440006 57.798 49.43401 c
57.656002 49.352009 57.517002 49.272011 57.375 49.19001 c
57.372002 49.188011 57.368999 49.186008 57.366001 49.18401 c
56.616001 48.754009 55.860001 48.327011 55.100002 47.895008 c
55.079002 47.883007 55.057003 47.872009 55.036003 47.860008 c
54.893002 47.779007 54.753002 47.699009 54.610004 47.619007 c
54.606003 47.617008 54.602005 47.615005 54.598003 47.613007 c
51.942001 46.119007 49.236004 44.650005 46.506004 43.232006 c
46.501003 43.229008 46.497005 43.226006 46.492004 43.223007 c
46.392006 43.172009 46.291004 43.119007 46.191006 43.068008 c
46.185005 43.06601 l
45.326004 42.62001 44.464005 42.179008 43.602005 41.747009 c
43.599007 41.74501 43.594006 41.743008 43.591003 41.741009 c
43.524002 41.707008 43.457005 41.674007 43.390003 41.639008 c
43.384003 41.637009 43.378002 41.633007 43.372002 41.630009 c
42.476002 41.180008 41.579002 40.737007 40.681 40.303009 c
40.68 40.30201 40.679001 40.30101 40.678001 40.30101 c
40.66 40.292011 40.642002 40.284012 40.623001 40.276009 c
40.616001 40.27301 40.609001 40.268009 40.602001 40.265007 c
40.037003 39.992008 39.472 39.722008 38.907001 39.454006 c
38.771 39.390007 l
38.226002 39.133007 37.681 38.879005 37.136002 38.628006 c
37.101002 38.612007 37.065002 38.596004 37.030003 38.579006 c
34.096001 37.232006 31.180002 35.987007 28.316002 34.879005 c
28.305002 34.875004 28.294003 34.870007 28.284002 34.866005 c
25.088001 33.632004 21.958002 32.567005 18.948002 31.732004 c
24.245003 28.929005 32.353001 26.358004 39.552002 24.482004 c
43.929001 23.334003 47.994003 22.415005 50.961002 21.784004 c
52.924004 21.367004 54.399002 21.078005 55.174004 20.929005 c
55.442005 21.117004 55.704002 21.310005 55.969002 21.502005 c
61.088001 25.210005 65.647003 29.885006 69.637001 34.908005 c
67.448997 34.419006 65.681999 34.572006 65.424004 35.358006 c
65.112007 36.308006 67.129005 37.823006 69.932007 38.742004 c
71.036003 39.103004 72.090004 39.316006 72.989006 39.387005 c
77.938004 46.389004 81.838005 53.694004 84.651009 59.754005 c
84.684006 59.828007 84.723007 59.900005 84.768005 59.967007 c
86.850006 63.801006 88.340004 66.989006 89.417007 69.696007 c
89.615005 70.192009 89.80101 70.673004 89.971008 71.13501 c
89.99501 71.203011 l
90.517014 72.629013 90.920013 73.905014 91.230011 75.060013 c
91.261009 75.183014 91.294014 75.306015 91.328011 75.42701 c
92.266014 79.07901 92.310013 81.522011 92.462013 83.946007 c
92.475014 84.222008 92.48101 84.49601 92.48101 84.758003 c
92.496002 86.544998 92.195 87.942001 91.833 88.755997 c
h
f
Q
q
[83.985611 0 0 83.98394 2961.0149 443.15619] cm
/DeviceRGB {} CS
[0.8706 0.4627 0.1098] SC
/DeviceRGB {} cs
[0.8706 0.4627 0.1098] sc
6.18 6.8 m
8.4 6.8 9.74 8.06 9.74 10.4 c
9.74 12.92 l
9.74 15.06 8.42 16.5 6.18 16.5 c
4.5 16.5 l
4.5 19.82 l
4.5 19.92 4.42 20 4.32 20 c
2.02 20 l
1.94 20 1.88 19.92 1.88 19.82 c
1.88 6.98 l
1.88 6.88 1.94 6.8 2.02 6.8 c
6.18 6.8 l
6.18 6.8 l
h
7.12 12.32 m
7.12 11 l
7.12 9.62 6.48 9.48 5.08 9.48 c
4.5 9.48 l
4.5 13.879999 l
5.08 13.879999 l
6.18 13.879999 7.12 13.679999 7.12 12.32 c
h
8.54 12.78 m
8.54 10.28 l
8.54 8.08 6.84 7.9 5.92 7.9 c
3.22 7.9 l
3.18 7.9 3.1 7.96 3.1 8.02 c
3.1 18.779999 l
3.1 18.919998 3.34 18.919998 3.34 18.779999 c
3.34 15.379999 l
5.74 15.379999 l
7.5 15.379999 8.54 14.759999 8.54 12.779999 c
8.54 12.78 l
h
3.34 8.16 m
5.92 8.16 l
8.14 8.16 8.280001 9.62 8.280001 10.28 c
8.280001 12.78 l
8.280001 14.82 7.000001 15.099999 5.740001 15.099999 c
3.340001 15.099999 l
3.340001 8.16 l
3.34 8.16 l
h
12.72 20 m
12.62 20 12.56 19.92 12.56 19.82 c
12.56 6.98 l
12.56 6.88 12.620001 6.8 12.72 6.8 c
15 6.8 l
15.1 6.8 15.18 6.88 15.18 6.98 c
15.18 19.82 l
15.18 19.92 15.1 20 15 20 c
12.72 20 l
h
13.76 8 m
13.76 18.779999 l
13.76 18.959999 13.980001 18.959999 13.980001 18.779999 c
13.980001 7.999999 l
13.980001 7.859999 13.76 7.859999 13.76 7.999999 c
13.76 8 l
h
22.08 17.5 m
26.779999 17.5 l
26.879999 17.5 26.959999 17.58 26.959999 17.68 c
26.959999 19.82 l
26.959999 19.92 26.879999 20 26.779999 20 c
19.059999 20 l
18.98 20 18.879999 19.959999 18.879999 19.82 c
18.879999 17.6 l
18.879999 17.6 18.879999 17.58 18.9 17.52 c
23.719999 9.3 l
19 9.3 l
18.9 9.3 18.82 9.22 18.82 9.12 c
18.82 6.98 l
18.82 6.88 18.9 6.8 19 6.8 c
26.779999 6.8 l
26.9 6.8 26.919998 6.92 26.919998 6.96 c
26.919998 9.2 l
26.919998 9.22 26.919998 9.26 26.899998 9.28 c
22.08 17.5 l
h
20.120001 7.9 m
19.980001 7.9 20 8.16 20.120001 8.16 c
25.52 8.16 l
25.66 8.16 25.68 8.2 25.620001 8.3 c
19.860001 18.360001 l
19.76 18.560001 19.860001 18.880001 20.16 18.880001 c
25.619999 18.880001 l
25.779999 18.880001 25.779999 18.620001 25.619999 18.620001 c
20.16 18.620001 l
20.08 18.620001 20.059999 18.560001 20.08 18.480001 c
25.82 8.400002 l
26.02 8.060001 25.860001 7.900002 25.619999 7.900002 c
20.119999 7.900002 l
20.120001 7.9 l
h
33.880001 17.5 m
38.580002 17.5 l
38.68 17.5 38.760002 17.58 38.760002 17.68 c
38.760002 19.82 l
38.760002 19.92 38.68 20 38.580002 20 c
30.860003 20 l
30.780003 20 30.680002 19.959999 30.680002 19.82 c
30.680002 17.6 l
30.680002 17.6 30.680002 17.58 30.700003 17.52 c
35.520004 9.3 l
30.800005 9.3 l
30.700005 9.3 30.620005 9.22 30.620005 9.12 c
30.620005 6.98 l
30.620005 6.88 30.700005 6.8 30.800005 6.8 c
38.580006 6.8 l
38.700005 6.8 38.720005 6.92 38.720005 6.96 c
38.720005 9.2 l
38.720005 9.22 38.720005 9.26 38.700005 9.28 c
33.880001 17.5 l
h
31.92 7.9 m
31.780001 7.9 31.799999 8.16 31.92 8.16 c
37.32 8.16 l
37.459999 8.16 37.48 8.2 37.419998 8.3 c
31.659998 18.360001 l
31.559998 18.560001 31.659998 18.880001 31.959997 18.880001 c
37.419998 18.880001 l
37.579998 18.880001 37.579998 18.620001 37.419998 18.620001 c
31.959999 18.620001 l
31.879999 18.620001 31.859999 18.560001 31.879999 18.480001 c
37.619999 8.400002 l
37.82 8.060001 37.66 7.900002 37.419998 7.900002 c
31.919998 7.900002 l
31.92 7.9 l
h
42.619999 20 m
42.52 20 42.459999 19.92 42.459999 19.82 c
42.459999 6.98 l
42.459999 6.88 42.52 6.8 42.619999 6.8 c
49.419998 6.8 l
49.519997 6.8 49.599998 6.88 49.599998 6.98 c
49.599998 9.12 l
49.599998 9.22 49.519997 9.3 49.419998 9.3 c
45.099998 9.3 l
45.099998 12.020001 l
48.459999 12.020001 l
48.559998 12.020001 48.619999 12.1 48.619999 12.200001 c
48.619999 14.380001 l
48.619999 14.480001 48.559998 14.560001 48.459999 14.560001 c
45.099998 14.560001 l
45.099998 17.500002 l
49.419998 17.500002 l
49.519997 17.500002 49.599998 17.580002 49.599998 17.680002 c
49.599998 19.820002 l
49.599998 19.920002 49.519997 20.000002 49.419998 20.000002 c
42.619999 20.000002 l
42.619999 20 l
h
43.619999 8.06 m
43.619999 18.700001 l
43.619999 18.820002 43.700001 18.860001 43.779999 18.860001 c
48.379997 18.860001 l
48.559998 18.860001 48.519997 18.620001 48.379997 18.620001 c
43.879997 18.620001 l
43.879997 13.400002 l
47.559998 13.400002 l
47.679996 13.400002 47.679996 13.120002 47.559998 13.120002 c
43.879997 13.120002 l
43.879997 8.160002 l
48.379997 8.160002 l
48.519997 8.160002 48.559998 7.900002 48.379997 7.900002 c
43.779999 7.900002 l
43.699997 7.900002 43.619999 7.960002 43.619999 8.060001 c
43.619999 8.06 l
h
60.48 14.78 m
60.200001 15.36 59.799999 15.799999 59.239998 16.06 c
60.919998 19.76 l
60.98 19.880001 60.899998 20 60.779999 20 c
58.32 20 l
58.239998 20 58.200001 19.959999 58.18 19.9 c
56.619999 16.5 l
55.599998 16.5 l
55.599998 19.82 l
55.599998 19.92 55.519997 20 55.419998 20 c
53.119999 20 l
53.039997 20 52.98 19.92 52.98 19.82 c
52.98 6.98 l
52.98 6.88 53.040001 6.8 53.119999 6.8 c
57.279999 6.8 l
59.5 6.8 60.84 8.06 60.84 10.4 c
60.84 12.92 l
60.84 13.62 60.720001 14.28 60.48 14.78 c
h
58.220001 12.3 m
58.220001 11 l
58.220001 9.6 57.700001 9.46 56.18 9.46 c
55.599998 9.46 l
55.599998 13.88 l
56.18 13.88 l
57.439999 13.88 58.18 13.86 58.220001 12.3 c
h
54.439999 18.780001 m
54.439999 15.360001 l
57.32 15.360001 l
59 18.82 l
59.040001 18.92 59.279999 18.879999 59.220001 18.699999 c
57.540001 15.299999 l
59.100002 15.079999 59.639999 14.259999 59.639999 12.779999 c
59.639999 10.279999 l
59.639999 8.079999 57.639999 7.899999 57.02 7.899999 c
54.32 7.899999 l
54.279999 7.899999 54.200001 7.959999 54.200001 8.019999 c
54.200001 18.779999 l
54.200001 18.919998 54.440002 18.919998 54.440002 18.779999 c
54.439999 18.780001 l
h
59.400002 10.28 m
59.400002 12.78 l
59.400002 14.82 58.100002 15.099999 56.84 15.099999 c
54.439999 15.099999 l
54.439999 8.16 l
57.019997 8.16 l
59.179996 8.16 59.399998 9.62 59.399998 10.28 c
59.400002 10.28 l
h
64.540001 20 m
64.440002 20 64.379997 19.92 64.379997 19.82 c
64.379997 6.98 l
64.379997 6.88 64.439995 6.8 64.540001 6.8 c
66.82 6.8 l
66.919998 6.8 67 6.88 67 6.98 c
67 19.82 l
67 19.92 66.919998 20 66.82 20 c
64.540001 20 l
h
65.580002 8 m
65.580002 18.779999 l
65.580002 18.959999 65.800003 18.959999 65.800003 18.779999 c
65.800003 7.999999 l
65.800003 7.859999 65.580002 7.859999 65.580002 7.999999 c
65.580002 8 l
h
73.18 6.92 m
73.199997 6.86 73.239998 6.8 73.32 6.8 c
75.800003 6.8 l
75.880005 6.8 75.920006 6.86 75.940002 6.92 c
79.400002 19.779999 l
79.419998 19.9 79.340004 19.999998 79.220001 19.999998 c
76.940002 19.999998 l
76.880005 19.999998 76.82 19.959997 76.800003 19.879997 c
76.020004 17.079998 l
73.100006 17.079998 l
72.340004 19.879997 l
72.320007 19.959997 72.280006 19.999998 72.200005 19.999998 c
69.900002 19.999998 l
69.779999 19.999998 69.700005 19.899998 69.720001 19.779999 c
73.18 6.92 l
h
73.739998 14.6 m
75.400002 14.6 l
74.540001 11.58 l
73.739998 14.6 l
h
76.82 15.78 m
77.739998 18.779999 l
77.779999 18.9 78 18.879999 77.939995 18.719999 c
74.739998 8.079999 l
74.68 7.819999 74.339996 7.799999 74.279999 8.079999 c
71.18 18.719999 l
71.120003 18.859999 71.340004 18.92 71.400002 18.799999 c
72.279999 15.779999 l
76.82 15.779999 l
76.82 15.78 l
h
72.339996 15.520001 m
74.519997 8.16 l
76.739998 15.520001 l
72.339996 15.520001 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
